[{"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\index.tsx":"1","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\reportWebVitals.ts":"2","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\App.tsx":"3","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\static\\theme.ts":"4","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineList.tsx":"5","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineEdit.tsx":"6","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasList.tsx":"7","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasEdit.tsx":"8","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasCreate.tsx":"9","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\QuestionsList.tsx":"10","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\QuestoinEdit.tsx":"11","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswersList.tsx":"12","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineCreate.tsx":"13","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\CreateQuestion.tsx":"14","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswerCreate.tsx":"15","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\chat\\chatList.tsx":"16","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswerEdit.tsx":"17","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\chat\\ChatShow.tsx":"18","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\NotFound\\NotFound.tsx":"19","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\index.ts":"20","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\utils\\Styels.ts":"21","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\Menu.tsx":"22","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\Actions.tsx":"23","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\SubMenu.js":"24","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\profession\\Profession.tsx":"25","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\region\\Region.tsx":"26","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\ListQuestionnaire.tsx":"27","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\EditQuestionnaire.tsx":"28","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\ShowQuestionnaire.tsx":"29","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\loader\\loader.tsx":"30","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\CreateQuestionnaire.tsx":"31","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\RichInput\\index.tsx":"32"},{"size":257,"mtime":1608128447023,"results":"33","hashOfConfig":"34"},{"size":440,"mtime":1608050972755,"results":"35","hashOfConfig":"34"},{"size":3531,"mtime":1608229480163,"results":"36","hashOfConfig":"34"},{"size":273,"mtime":1608050972756,"results":"37","hashOfConfig":"34"},{"size":1218,"mtime":1608222636265,"results":"38","hashOfConfig":"34"},{"size":1405,"mtime":1608233492381,"results":"39","hashOfConfig":"34"},{"size":583,"mtime":1608221601617,"results":"40","hashOfConfig":"34"},{"size":974,"mtime":1608233688189,"results":"41","hashOfConfig":"34"},{"size":704,"mtime":1608232870587,"results":"42","hashOfConfig":"34"},{"size":905,"mtime":1608062378817,"results":"43","hashOfConfig":"34"},{"size":2113,"mtime":1608050972721,"results":"44","hashOfConfig":"34"},{"size":1369,"mtime":1608050972662,"results":"45","hashOfConfig":"34"},{"size":932,"mtime":1608228321144,"results":"46","hashOfConfig":"34"},{"size":1932,"mtime":1608050972716,"results":"47","hashOfConfig":"34"},{"size":1409,"mtime":1608050972649,"results":"48","hashOfConfig":"34"},{"size":724,"mtime":1608050972681,"results":"49","hashOfConfig":"34"},{"size":1418,"mtime":1608050972661,"results":"50","hashOfConfig":"34"},{"size":3878,"mtime":1608050972681,"results":"51","hashOfConfig":"34"},{"size":646,"mtime":1608050972646,"results":"52","hashOfConfig":"34"},{"size":97,"mtime":1608050972625,"results":"53","hashOfConfig":"34"},{"size":1061,"mtime":1608050972759,"results":"54","hashOfConfig":"34"},{"size":2758,"mtime":1608129514064,"results":"55","hashOfConfig":"34"},{"size":1182,"mtime":1608124847052,"results":"56","hashOfConfig":"34"},{"size":2366,"mtime":1608050972625,"results":"57","hashOfConfig":"34"},{"size":399,"mtime":1608128520745,"results":"58","hashOfConfig":"34"},{"size":674,"mtime":1608128483035,"results":"59","hashOfConfig":"34"},{"size":420,"mtime":1608130813655,"results":"60","hashOfConfig":"34"},{"size":1844,"mtime":1608232171045,"results":"61","hashOfConfig":"34"},{"size":3376,"mtime":1608227853531,"results":"62","hashOfConfig":"34"},{"size":366,"mtime":1608050972648,"results":"63","hashOfConfig":"34"},{"size":2291,"mtime":1608232183857,"results":"64","hashOfConfig":"34"},{"size":295,"mtime":1608219736998,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"6h7sc2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\index.tsx",[],["142","143"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\reportWebVitals.ts",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\App.tsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\static\\theme.ts",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineList.tsx",["160","161","162"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineEdit.tsx",["163","164","165","166","167","168","169","170","171","172","173","174"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasList.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasEdit.tsx",["175"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\diseas\\DiseasCreate.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\QuestionsList.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\QuestoinEdit.tsx",[],["176","177"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswersList.tsx",[],["178","179"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\vaccine\\VaccineCreate.tsx",["180","181"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questions\\CreateQuestion.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswerCreate.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\chat\\chatList.tsx",[],["182","183"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\answers\\AnswerEdit.tsx",["184"],"import React from 'react';\r\nimport {\r\n  Edit,\r\n  ReferenceInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  ArrayInput,\r\n  SimpleFormIterator,\r\n  SelectInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ntype AnswerEdit = {\r\n\r\n}\r\n\r\nconst AnswerTitle: React.FC<any> = ({record}) => (<span>{record.text || \"редактирование ответа\"}</span>);\r\n\r\nexport const AnswerEdit: React.FC<AnswerEdit> = props => (\r\n  <Edit {...props} title={<AnswerTitle/>}>\r\n    <SimpleForm>\r\n      <ReferenceInput source=\"PollItemId.id\" reference=\"questions\" label=\"вопрос\" helperText=\"вопрос для опросника\" fullWidth>\r\n        <SelectInput optionText=\"question\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"text\" label=\"ответ\" fullWidth />\r\n      \r\n      <Typography>\r\n        Болезни для этого вопроса\r\n      </Typography>\r\n      <ArrayInput source=\"diseasIds\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable fullWidth>\r\n            <SelectInput source=\"name\" />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n\r\n    </SimpleForm>\r\n  </Edit>\r\n);","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\chat\\ChatShow.tsx",["185","186","187","188"],"import React, { useEffect, useState } from 'react';\r\nimport { Show, useDataProvider, useListContext } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { sif } from '../../utils/Styels';\r\nimport { ChatMessage } from '../../types';\r\n\r\n\r\ntype ChatShowProps = {\r\n    record?: any\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    message: {\r\n        display: 'flex',\r\n\r\n        \"& > div\": {\r\n            maxWidth: '80%',\r\n            padding: 10,\r\n            boxShadow: '0 0 5px 0 #333',\r\n            borderRadius: 6\r\n        }\r\n    },\r\n    messageRight: {\r\n        justifyContent: 'flex-end',\r\n\r\n        \"& > div\": {\r\n            backgroundColor: '#b0ffb1'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst ChatShowLayout: React.FC<ChatShowProps> = ({ record }) => {\r\n    const classes = useStyles();\r\n    const dataProvider = useDataProvider();\r\n    const [answerText, setAnswerText] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        answerText: ''\r\n    });\r\n\r\n    // форматирование чата\r\n    const chat = JSON.parse(record.chatDoctor);\r\n    const filteredChat = chat.sort((l: any, r: any) => l.time - r.time);\r\n\r\n    const submitHandle = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (answerText.length < 3) {\r\n            return setErrors(state => ({ answerText: 'ответ не короче 3 символов' }));\r\n        }\r\n\r\n        const answer = {\r\n            \"time\": Date.now(),\r\n            \"text\": answerText,\r\n            \"isAnswer\": true\r\n        };\r\n        chat[chat.length] = answer;\r\n        dataProvider.update('chat', ({ data: { Id: record.Id, chatDoctor: chat } } as any) )\r\n            .then((r) => {})\r\n            .catch((e) => {\r\n                console.log('• chatWhowError', e);\r\n            });\r\n        setAnswerText('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box p={5}>\r\n                <Typography variant=\"h5\">{record.firstName} {record.lastName} {record.userName}</Typography>\r\n                <Typography>чат</Typography>\r\n                <Box p={5}>\r\n                    {chat.length == 0 && <Typography>пока нет вопросов</Typography>}\r\n                    {chat.map((m: ChatMessage) => (\r\n                        <Box key={m.time} marginBottom={1} className={sif({ [classes.message]: true, [classes.messageRight]: m.isAnswer })}>\r\n                            <div>\r\n                                <Box p={1} fontSize={12}>{new Date(m.time).toLocaleString('ru')}</Box>\r\n                                {m.text}\r\n                            </div>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Box marginBottom={1}><Typography>форма ответа</Typography></Box>\r\n                <form onSubmit={submitHandle}>\r\n                    <Box marginBottom={1}>\r\n                        <Typography color=\"error\">{errors.answerText}</Typography>\r\n                        <TextField fullWidth id=\"outlined-basic\" label=\"ответ\" variant=\"outlined\" value={answerText} onChange={(e) => setAnswerText(e.target.value)} />\r\n                    </Box>\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                        отправить\r\n                    </Button>\r\n                </form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ChatShowTitle: React.FC<any> = ({ record }) => (<span>{record.firstName} {record.lastName} {record.userName}</span>)\r\nexport const ChatShow: React.FC<any> = (props) => {\r\n    return (\r\n        <Show {...props} title={<ChatShowTitle />}>\r\n            <ChatShowLayout />\r\n        </Show>\r\n    );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\NotFound\\NotFound.tsx",["189"],"import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Title } from 'react-admin';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default () => (\r\n  <Card>\r\n    <Title title=\"Не нашлось\" />\r\n    <CardContent>\r\n      <h1>Ничего не нашлось</h1>\r\n\r\n      <Typography>\r\n        <Link to=\"/vaccine\">к вакцинам</Link>\r\n      </Typography>\r\n      <Typography>\r\n        <Link to=\"/diseas\">к болезням</Link>\r\n      </Typography>\r\n    </CardContent>\r\n  </Card>\r\n);","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\index.ts",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\utils\\Styels.ts",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\Menu.tsx",["190","191","192"],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMediaQuery, Box } from '@material-ui/core';\r\nimport Book from '@material-ui/icons/Book';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Question from '@material-ui/icons/QuestionAnswer';\r\nimport ChatBubble from '@material-ui/icons/ChatBubble';\r\nimport AddComment from '@material-ui/icons/AddComment';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport CardTravelIcon from '@material-ui/icons/CardTravel';\r\nimport {\r\n  useTranslate,\r\n  MenuItemLink\r\n} from 'react-admin';\r\nimport SubMenu from './SubMenu';\r\n\r\n\r\n\r\nconst Menu: React.FC<any> = ({ onMenuClick, logout, dense = false }) => {\r\n  const [state, setState] = useState<{ [p: string]: boolean }>({\r\n    diseas: true\r\n  });\r\n  const translate = useTranslate();\r\n  const isXSmall = useMediaQuery((theme: any) =>\r\n    theme.breakpoints.down('xs')\r\n  );\r\n  const open = useSelector((state: any) => state.admin.ui.sidebarOpen);\r\n  useSelector((state: any) => state.theme); // force rerender on theme change\r\n\r\n  const handleToggle = (menu: string) => {\r\n    setState(state => ({ ...state, [menu]: !state[menu] }));\r\n  };\r\n\r\n  return (\r\n    <Box mt={1}>\r\n      {' '}\r\n      <MenuItemLink\r\n        to={`/vaccine`}\r\n        primaryText={\"вакцины\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<Book />}\r\n      />\r\n\r\n      <SubMenu\r\n        handleToggle={() => handleToggle('diseas')}\r\n        isOpen={state.diseas}\r\n        sidebarIsOpen={open}\r\n        name=\"болезни\"\r\n        dense={dense}\r\n        icon={<Question />}\r\n      >\r\n        <MenuItemLink\r\n          to={`/region`}\r\n          primaryText={\"регион\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          dense={dense}\r\n          leftIcon={<MapIcon />}\r\n        />\r\n        <MenuItemLink\r\n          to={`/profession`}\r\n          primaryText={\"проф. риски\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          dense={dense}\r\n          leftIcon={<CardTravelIcon />}\r\n        />\r\n        <MenuItemLink\r\n          to={`/disease`}\r\n          primaryText={\"болезни\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          dense={dense}\r\n          leftIcon={<BugReport />}\r\n        />\r\n      </SubMenu>\r\n\r\n      <MenuItemLink\r\n        to={`/questionnaire`}\r\n        primaryText={\"опросники\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<ChatBubble />}\r\n      />\r\n      {isXSmall && logout}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Menu;","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\Actions.tsx",["193","194","195","196"],"import * as React from 'react';\r\nimport { cloneElement } from 'react';\r\nimport {\r\n  useListContext,\r\n  TopToolbar,\r\n  CreateButton,\r\n  ExportButton,\r\n  Button,\r\n  sanitizeListRestProps,\r\n} from 'react-admin';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nexport const ListActions: React.FC<any> = (props) => {\r\n  const {\r\n    className,\r\n    exporter,\r\n    filters,\r\n    maxResults,\r\n    ...rest\r\n  } = props;\r\n  const {\r\n    currentSort,\r\n    resource,\r\n    displayedFilters,\r\n    filterValues,\r\n    hasCreate,\r\n    basePath,\r\n    selectedIds,\r\n    showFilter,\r\n    total,\r\n  } = useListContext();\r\n\r\n  return (\r\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\r\n      {filters && cloneElement(filters, {\r\n        resource,\r\n        showFilter,\r\n        displayedFilters,\r\n        filterValues,\r\n        context: 'button'\r\n      })}\r\n      <CreateButton basePath={basePath} label=\"создать\" />\r\n      <ExportButton\r\n        disabled={total === 0}\r\n        resource={resource}\r\n        sort={currentSort}\r\n        filterValues={filterValues}\r\n        maxResults={maxResults}\r\n        label=\"экспорт\"\r\n      />\r\n    </TopToolbar>\r\n  );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\Layout\\SubMenu.js",["197","198","199"],"import * as React from 'react';\r\nimport { FC, Fragment, ReactElement } from 'react';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: { minWidth: theme.spacing(5) },\r\n    sidebarIsOpen: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(4),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n    sidebarIsClosed: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(2),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst SubMenu = ({\r\n    handleToggle,\r\n    sidebarIsOpen,\r\n    isOpen,\r\n    name,\r\n    icon,\r\n    children,\r\n    dense,\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const header = (\r\n        <MenuItem dense={dense} button onClick={handleToggle}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {isOpen ? <ExpandMore /> : icon}\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {name}\r\n            </Typography>\r\n        </MenuItem>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            {sidebarIsOpen || isOpen ? (\r\n                header\r\n            ) : (\r\n                <Tooltip title={name} placement=\"right\">\r\n                    {header}\r\n                </Tooltip>\r\n            )}\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                <List\r\n                    dense={dense}\r\n                    component=\"div\"\r\n                    disablePadding\r\n                    className={\r\n                        sidebarIsOpen\r\n                            ? classes.sidebarIsOpen\r\n                            : classes.sidebarIsClosed\r\n                    }\r\n                >\r\n                    {children}\r\n                </List>\r\n            </Collapse>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SubMenu;",["200","201"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\profession\\Profession.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\region\\Region.tsx",["202"],"import React from 'react';\r\nimport { Datagrid, Filter, List, TextField, TextInput } from 'react-admin';\r\n\r\nimport { ListActions } from '../../Layout';\r\n\r\n\r\ntype RegionListProps = {}\r\n\r\nconst DiseasFilter: React.FC<any> = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"поиск\" source=\"q\" always-on />\r\n  </Filter>\r\n);\r\n\r\nexport const RegionList: React.FC<RegionListProps> = (props) => {\r\n  return (\r\n    <List {...props} title=\"региональные риски\" filters={<DiseasFilter />}>\r\n      <Datagrid rowClick=\"edit\" isRowSelectable={r => false}>\r\n        <TextField source=\"name\" label=\"название\" />\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\ListQuestionnaire.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\EditQuestionnaire.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\ShowQuestionnaire.tsx",["203","204","205"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\loader\\loader.tsx",[],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\entities\\questionnaire\\CreateQuestionnaire.tsx",["206","207","208","209","210"],"D:\\УчёбаНовая\\frameworks\\immunify-radmin-net\\src\\components\\RichInput\\index.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":17,"nodeType":"217","messageId":"218","endLine":2,"endColumn":28},{"ruleId":"215","severity":1,"message":"219","line":2,"column":30,"nodeType":"217","messageId":"218","endLine":2,"endColumn":40},{"ruleId":"215","severity":1,"message":"220","line":2,"column":42,"nodeType":"217","messageId":"218","endLine":2,"endColumn":53},{"ruleId":"215","severity":1,"message":"221","line":2,"column":65,"nodeType":"217","messageId":"218","endLine":2,"endColumn":76},{"ruleId":"215","severity":1,"message":"222","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":15},{"ruleId":"215","severity":1,"message":"223","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":22},{"ruleId":"215","severity":1,"message":"224","line":21,"column":10,"nodeType":"217","messageId":"218","endLine":21,"endColumn":22},{"ruleId":"215","severity":1,"message":"225","line":22,"column":10,"nodeType":"217","messageId":"218","endLine":22,"endColumn":22},{"ruleId":"215","severity":1,"message":"226","line":23,"column":10,"nodeType":"217","messageId":"218","endLine":23,"endColumn":24},{"ruleId":"215","severity":1,"message":"227","line":24,"column":10,"nodeType":"217","messageId":"218","endLine":24,"endColumn":20},{"ruleId":"215","severity":1,"message":"228","line":25,"column":10,"nodeType":"217","messageId":"218","endLine":25,"endColumn":20},{"ruleId":"215","severity":1,"message":"229","line":26,"column":10,"nodeType":"217","messageId":"218","endLine":26,"endColumn":22},{"ruleId":"215","severity":1,"message":"230","line":27,"column":10,"nodeType":"217","messageId":"218","endLine":27,"endColumn":18},{"ruleId":"215","severity":1,"message":"231","line":28,"column":10,"nodeType":"217","messageId":"218","endLine":28,"endColumn":18},{"ruleId":"215","severity":1,"message":"232","line":29,"column":10,"nodeType":"217","messageId":"218","endLine":29,"endColumn":25},{"ruleId":"215","severity":1,"message":"233","line":30,"column":10,"nodeType":"217","messageId":"218","endLine":30,"endColumn":20},{"ruleId":"215","severity":1,"message":"234","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":13},{"ruleId":"215","severity":1,"message":"235","line":13,"column":10,"nodeType":"217","messageId":"218","endLine":13,"endColumn":21},{"ruleId":"215","severity":1,"message":"236","line":26,"column":7,"nodeType":"217","messageId":"218","endLine":26,"endColumn":34},{"ruleId":"215","severity":1,"message":"237","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"238","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"239","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":13},{"ruleId":"215","severity":1,"message":"240","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"241","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":21},{"ruleId":"215","severity":1,"message":"242","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"243","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":21},{"ruleId":"215","severity":1,"message":"244","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":17},{"ruleId":"215","severity":1,"message":"245","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":11},{"ruleId":"215","severity":1,"message":"246","line":18,"column":8,"nodeType":"217","messageId":"218","endLine":18,"endColumn":17},{"ruleId":"215","severity":1,"message":"247","line":19,"column":8,"nodeType":"217","messageId":"218","endLine":19,"endColumn":14},{"ruleId":"248","severity":1,"message":"249","line":39,"column":22,"nodeType":"250","messageId":"251","endLine":39,"endColumn":24},{"ruleId":"248","severity":1,"message":"249","line":20,"column":20,"nodeType":"250","messageId":"251","endLine":20,"endColumn":22},{"ruleId":"211","replacedBy":"252"},{"ruleId":"213","replacedBy":"253"},{"ruleId":"211","replacedBy":"254"},{"ruleId":"213","replacedBy":"255"},{"ruleId":"215","severity":1,"message":"246","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":17},{"ruleId":"215","severity":1,"message":"247","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":14},{"ruleId":"211","replacedBy":"256"},{"ruleId":"213","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":21,"column":14,"nodeType":"217","messageId":"260","endLine":21,"endColumn":46},{"ruleId":"215","severity":1,"message":"237","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"244","line":2,"column":33,"nodeType":"217","messageId":"218","endLine":2,"endColumn":47},{"ruleId":"215","severity":1,"message":"261","line":48,"column":11,"nodeType":"217","messageId":"218","endLine":48,"endColumn":23},{"ruleId":"248","severity":1,"message":"249","line":76,"column":34,"nodeType":"250","messageId":"251","endLine":76,"endColumn":36},{"ruleId":"262","severity":1,"message":"263","line":8,"column":1,"nodeType":"264","endLine":22,"endColumn":3},{"ruleId":"215","severity":1,"message":"265","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":18},{"ruleId":"215","severity":1,"message":"266","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":16},{"ruleId":"215","severity":1,"message":"267","line":25,"column":9,"nodeType":"217","messageId":"218","endLine":25,"endColumn":18},{"ruleId":"215","severity":1,"message":"247","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":9},{"ruleId":"215","severity":1,"message":"268","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":17},{"ruleId":"215","severity":1,"message":"269","line":26,"column":5,"nodeType":"217","messageId":"218","endLine":26,"endColumn":14},{"ruleId":"215","severity":1,"message":"270","line":28,"column":5,"nodeType":"217","messageId":"218","endLine":28,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":12},{"ruleId":"271","severity":1,"message":"273","line":2,"column":24,"nodeType":"217","messageId":"218","endLine":2,"endColumn":36},{"ruleId":"271","severity":1,"message":"274","line":11,"column":10,"nodeType":"217","messageId":"218","endLine":11,"endColumn":22},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"235","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":21},{"ruleId":"215","severity":1,"message":"275","line":2,"column":48,"nodeType":"217","messageId":"218","endLine":2,"endColumn":63},{"ruleId":"215","severity":1,"message":"276","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":15},{"ruleId":"215","severity":1,"message":"277","line":65,"column":22,"nodeType":"217","messageId":"218","endLine":65,"endColumn":30},{"ruleId":"215","severity":1,"message":"278","line":2,"column":30,"nodeType":"217","messageId":"218","endLine":2,"endColumn":39},{"ruleId":"215","severity":1,"message":"240","line":2,"column":62,"nodeType":"217","messageId":"218","endLine":2,"endColumn":76},{"ruleId":"215","severity":1,"message":"242","line":2,"column":96,"nodeType":"217","messageId":"218","endLine":2,"endColumn":107},{"ruleId":"215","severity":1,"message":"279","line":27,"column":7,"nodeType":"217","messageId":"218","endLine":27,"endColumn":30},{"ruleId":"215","severity":1,"message":"280","line":34,"column":9,"nodeType":"217","messageId":"218","endLine":34,"endColumn":16},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"@typescript-eslint/no-unused-vars","'EditGuesser' is defined but never used.","Identifier","unusedVar","'fetchUtils' is defined but never used.","'ListGuesser' is defined but never used.","'ShowGuesser' is defined but never used.","'MapIcon' is defined but never used.","'CardTravelIcon' is defined but never used.","'QuestionList' is defined but never used.","'QuestionEdit' is defined but never used.","'QuestionCreate' is defined but never used.","'AnswerList' is defined but never used.","'AnswerEdit' is defined but never used.","'AnswerCreate' is defined but never used.","'ChatList' is defined but never used.","'ChatShow' is defined but never used.","'ProfesstionList' is defined but never used.","'RegionList' is defined but never used.","'EditButton' is defined but never used.","'ListActions' is defined but never used.","'VaccinePanel' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ArrayInput' is defined but never used.","'ReferenceInput' is defined but never used.","'ReferenceManyField' is defined but never used.","'SelectInput' is defined but never used.","'SimpleFormIterator' is defined but never used.","'useListContext' is defined but never used.","'useQuery' is defined but never used.","'BugReport' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["281"],["282"],["281"],["282"],["281"],["282"],"@typescript-eslint/no-redeclare","'AnswerEdit' is already defined.","redeclared","'filteredChat' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'AddComment' is defined but never used.","'ChatIcon' is defined but never used.","'translate' is assigned a value but never used.","'IconEvent' is defined but never used.","'hasCreate' is assigned a value but never used.","'selectedIds' is assigned a value but never used.","no-unused-vars","'FC' is defined but never used.","'ReactElement' is defined but never used.","'useTranslate' is defined but never used.","'SingleFieldList' is defined but never used.","'classes' is defined but never used.","'basePath' is assigned a value but never used.","'DateInput' is defined but never used.","'RichElem' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]