[{"C:\\Users\\User\\projects\\reactadminnet\\src\\index.tsx":"1","C:\\Users\\User\\projects\\reactadminnet\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\projects\\reactadminnet\\src\\App.tsx":"3","C:\\Users\\User\\projects\\reactadminnet\\src\\static\\theme.ts":"4","C:\\Users\\User\\projects\\reactadminnet\\src\\utils\\Styels.ts":"5","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\Menu.tsx":"6","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\Actions.tsx":"7","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\SubMenu.js":"8","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasList.tsx":"9","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasEdit.tsx":"10","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasCreate.tsx":"11","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\QuestionsList.tsx":"12","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\CreateQuestion.tsx":"13","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswersList.tsx":"14","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswerEdit.tsx":"15","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswerCreate.tsx":"16","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\chat\\chatList.tsx":"17","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\chat\\ChatShow.tsx":"18","C:\\Users\\User\\projects\\reactadminnet\\src\\components\\NotFound\\NotFound.tsx":"19","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\index.ts":"20","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineEdit.tsx":"21","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineList.tsx":"22","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineCreate.tsx":"23","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\QuestoinEdit.tsx":"24"},{"size":289,"mtime":1608021197827,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":2173,"mtime":1608022507118,"results":"28","hashOfConfig":"26"},{"size":273,"mtime":1608026936994,"results":"29","hashOfConfig":"26"},{"size":1061,"mtime":1608021192862,"results":"30","hashOfConfig":"26"},{"size":2661,"mtime":1608026369084,"results":"31","hashOfConfig":"26"},{"size":1183,"mtime":1608021584054,"results":"32","hashOfConfig":"26"},{"size":2366,"mtime":1608023218669,"results":"33","hashOfConfig":"26"},{"size":704,"mtime":1608025425062,"results":"34","hashOfConfig":"26"},{"size":695,"mtime":1608025099975,"results":"35","hashOfConfig":"26"},{"size":648,"mtime":1608025051404,"results":"36","hashOfConfig":"26"},{"size":905,"mtime":1608025576214,"results":"37","hashOfConfig":"26"},{"size":1932,"mtime":1608025478575,"results":"38","hashOfConfig":"26"},{"size":1369,"mtime":1608023536089,"results":"39","hashOfConfig":"26"},{"size":1418,"mtime":1608023407826,"results":"40","hashOfConfig":"26"},{"size":1409,"mtime":1608023342374,"results":"41","hashOfConfig":"26"},{"size":724,"mtime":1608023627893,"results":"42","hashOfConfig":"26"},{"size":3878,"mtime":1608024346269,"results":"43","hashOfConfig":"26"},{"size":646,"mtime":1608022757379,"results":"44","hashOfConfig":"26"},{"size":97,"mtime":1608022789931,"results":"45","hashOfConfig":"26"},{"size":1479,"mtime":1608025970604,"results":"46","hashOfConfig":"26"},{"size":1329,"mtime":1608026093627,"results":"47","hashOfConfig":"26"},{"size":1495,"mtime":1608025911357,"results":"48","hashOfConfig":"26"},{"size":2113,"mtime":1608025828115,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1o5wsdm",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\User\\projects\\reactadminnet\\src\\index.tsx",[],["108","109"],"C:\\Users\\User\\projects\\reactadminnet\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\App.tsx",["110","111"],"import React from 'react';\nimport { Admin, EditGuesser, ListGuesser, Resource } from 'react-admin';\nimport PostIcon from '@material-ui/icons/Book';\nimport BugReport from '@material-ui/icons/BugReport';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\nimport './App.css';\n\nimport { VaccineList } from './entities/vaccine/VaccineList';\nimport { DiseasList } from './entities/diseas/DiseasList';\nimport { VaccineEdit } from './entities/vaccine/VaccineEdit';\nimport { VaccineCreate } from './entities/vaccine/VaccineCreate';\nimport { DiseasEdit } from './entities/diseas/DiseasEdit';\nimport { DiseasCreate } from './entities/diseas/DiseasCreate';\nimport NotFound from './components/NotFound/NotFound';\nimport { theme } from './static/theme';\nimport { Menu } from './Layout';\nimport { QuestionList } from './entities/questions/QuestionsList';\nimport { QuestionEdit } from './entities/questions/QuestoinEdit';\nimport { QuestionCreate } from './entities/questions/CreateQuestion';\nimport { AnswerList } from './entities/answers/AnswersList';\nimport { AnswerEdit } from './entities/answers/AnswerEdit';\nimport { AnswerCreate } from './entities/answers/AnswerCreate';\nimport { ChatList } from './entities/chat/chatList';\nimport { ChatShow } from './entities/chat/ChatShow';\n\n\nexport default function App() {\n  return (\n    <Admin\n      theme={theme}\n      dataProvider={simpleRestProvider(process.env.REACT_APP_API_URL as string)}\n      catchAll={NotFound}\n      menu={Menu}>\n\n      <Resource name=\"vaccine\" list={VaccineList} edit={VaccineEdit} icon={PostIcon} options={{\n        label: 'Вакцины'\n      }} create={VaccineCreate} />\n\n      <Resource name=\"diseas\" list={DiseasList} edit={DiseasEdit} icon={BugReport} options={{\n        label: 'Болезни'\n      }} create={DiseasCreate} />\n\n      <Resource name=\"questions\" list={QuestionList} edit={QuestionEdit} create={QuestionCreate} options={{\n        label: 'Вопросы'\n      }} />\n\n      <Resource name=\"answers\" list={AnswerList} edit={AnswerEdit} create={AnswerCreate} />\n\n      <Resource name=\"chat\" list={ChatList} show={ChatShow} options={{\n        label: 'Чат'\n      }} />\n\n    </Admin>\n  );\n}\n","C:\\Users\\User\\projects\\reactadminnet\\src\\static\\theme.ts",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\utils\\Styels.ts",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\Menu.tsx",["112"],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMediaQuery, Box } from '@material-ui/core';\r\nimport Book from '@material-ui/icons/Book';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Question from '@material-ui/icons/QuestionAnswer';\r\nimport ChatBubble from '@material-ui/icons/ChatBubble';\r\nimport AddComment from '@material-ui/icons/AddComment';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport {\r\n  useTranslate,\r\n  MenuItemLink\r\n} from 'react-admin';\r\nimport SubMenu from './SubMenu';\r\n\r\n\r\n\r\nconst Menu: React.FC<any> = ({ onMenuClick, logout, dense = false }) => {\r\n  const [state, setState] = useState<{[p: string]: boolean}>({\r\n    menuCatalog: true,\r\n    menuSales: true,\r\n    menuCustomers: true,\r\n  });\r\n  const translate = useTranslate();\r\n  const isXSmall = useMediaQuery((theme: any) =>\r\n    theme.breakpoints.down('xs')\r\n  );\r\n  const open = useSelector((state: any) => state.admin.ui.sidebarOpen);\r\n  useSelector((state: any) => state.theme); // force rerender on theme change\r\n\r\n  const handleToggle = (menu: string) => {\r\n    setState(state => ({ ...state, [menu]: !state[menu] }));\r\n  };\r\n\r\n  return (\r\n    <Box mt={1}>\r\n      {' '}\r\n      <MenuItemLink\r\n        to={`/vaccine`}\r\n        primaryText={\"вакцины\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<Book />}\r\n      />\r\n      <MenuItemLink\r\n        to={`/chat`}\r\n        primaryText={\"чат\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<ChatIcon />}\r\n      />\r\n      <MenuItemLink\r\n        to={`/diseas`}\r\n        primaryText={\"болезни\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<BugReport />}\r\n      />\r\n      <SubMenu\r\n        handleToggle={() => handleToggle('menuSales')}\r\n        isOpen={state.menuSales}\r\n        sidebarIsOpen={open}\r\n        name=\"вопросник\"\r\n        dense={dense}\r\n        icon={<Question />}\r\n      >\r\n        <MenuItemLink\r\n          to={`/questions`}\r\n          primaryText={\"вопросы\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          leftIcon={<ChatBubble />}\r\n          dense={dense}\r\n        />\r\n        <MenuItemLink\r\n          to={`/answers`}\r\n          primaryText={\"ответы\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          leftIcon={<AddComment />}\r\n          dense={dense}\r\n        />\r\n      </SubMenu>\r\n      {isXSmall && logout}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Menu;","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\Actions.tsx",["113","114","115","116"],"import * as React from 'react';\r\nimport { cloneElement } from 'react';\r\nimport {\r\n  useListContext,\r\n  TopToolbar,\r\n  CreateButton,\r\n  ExportButton,\r\n  Button,\r\n  sanitizeListRestProps,\r\n} from 'react-admin';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nexport const ListActions: React.FC<any> = (props) => {\r\n  const {\r\n    className,\r\n    exporter,\r\n    filters,\r\n    maxResults,\r\n    ...rest\r\n  } = props;\r\n  const {\r\n    currentSort,\r\n    resource,\r\n    displayedFilters,\r\n    filterValues,\r\n    hasCreate,\r\n    basePath,\r\n    selectedIds,\r\n    showFilter,\r\n    total,\r\n  } = useListContext();\r\n\r\n  return (\r\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\r\n      {filters && cloneElement(filters, {\r\n        resource,\r\n        showFilter,\r\n        displayedFilters,\r\n        filterValues,\r\n        context: 'button',\r\n      })}\r\n      <CreateButton basePath={basePath} label=\"создать\" />\r\n      <ExportButton\r\n        disabled={total === 0}\r\n        resource={resource}\r\n        sort={currentSort}\r\n        filterValues={filterValues}\r\n        maxResults={maxResults}\r\n        label=\"экспорт\"\r\n      />\r\n    </TopToolbar>\r\n  );\r\n};","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\SubMenu.js",["117","118","119"],"import * as React from 'react';\r\nimport { FC, Fragment, ReactElement } from 'react';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: { minWidth: theme.spacing(5) },\r\n    sidebarIsOpen: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(4),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n    sidebarIsClosed: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(2),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst SubMenu = ({\r\n    handleToggle,\r\n    sidebarIsOpen,\r\n    isOpen,\r\n    name,\r\n    icon,\r\n    children,\r\n    dense,\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const header = (\r\n        <MenuItem dense={dense} button onClick={handleToggle}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {isOpen ? <ExpandMore /> : icon}\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {name}\r\n            </Typography>\r\n        </MenuItem>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            {sidebarIsOpen || isOpen ? (\r\n                header\r\n            ) : (\r\n                <Tooltip title={name} placement=\"right\">\r\n                    {header}\r\n                </Tooltip>\r\n            )}\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                <List\r\n                    dense={dense}\r\n                    component=\"div\"\r\n                    disablePadding\r\n                    className={\r\n                        sidebarIsOpen\r\n                            ? classes.sidebarIsOpen\r\n                            : classes.sidebarIsClosed\r\n                    }\r\n                >\r\n                    {children}\r\n                </List>\r\n            </Collapse>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SubMenu;",["120","121"],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasList.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasEdit.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\diseas\\DiseasCreate.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\QuestionsList.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\CreateQuestion.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswersList.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswerEdit.tsx",["122"],"import React from 'react';\r\nimport {\r\n  Edit,\r\n  ReferenceInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  ArrayInput,\r\n  SimpleFormIterator,\r\n  SelectInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ntype AnswerEdit = {\r\n\r\n}\r\n\r\nconst AnswerTitle: React.FC<any> = ({record}) => (<span>{record.text || \"редактирование ответа\"}</span>);\r\n\r\nexport const AnswerEdit: React.FC<AnswerEdit> = props => (\r\n  <Edit {...props} title={<AnswerTitle/>}>\r\n    <SimpleForm>\r\n      <ReferenceInput source=\"PollItemId.id\" reference=\"questions\" label=\"вопрос\" helperText=\"вопрос для опросника\" fullWidth>\r\n        <SelectInput optionText=\"question\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"text\" label=\"ответ\" fullWidth />\r\n      \r\n      <Typography>\r\n        Болезни для этого вопроса\r\n      </Typography>\r\n      <ArrayInput source=\"diseasIds\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable fullWidth>\r\n            <SelectInput source=\"name\" />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n\r\n    </SimpleForm>\r\n  </Edit>\r\n);","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\answers\\AnswerCreate.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\chat\\chatList.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\chat\\ChatShow.tsx",["123","124","125","126"],"import React, { useEffect, useState } from 'react';\r\nimport { Show, useDataProvider, useListContext } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { sif } from '../../utils/Styels';\r\nimport { ChatMessage } from '../../types';\r\n\r\n\r\ntype ChatShowProps = {\r\n    record?: any\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    message: {\r\n        display: 'flex',\r\n\r\n        \"& > div\": {\r\n            maxWidth: '80%',\r\n            padding: 10,\r\n            boxShadow: '0 0 5px 0 #333',\r\n            borderRadius: 6\r\n        }\r\n    },\r\n    messageRight: {\r\n        justifyContent: 'flex-end',\r\n\r\n        \"& > div\": {\r\n            backgroundColor: '#b0ffb1'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst ChatShowLayout: React.FC<ChatShowProps> = ({ record }) => {\r\n    const classes = useStyles();\r\n    const dataProvider = useDataProvider();\r\n    const [answerText, setAnswerText] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        answerText: ''\r\n    });\r\n\r\n    // форматирование чата\r\n    const chat = JSON.parse(record.chatDoctor);\r\n    const filteredChat = chat.sort((l: any, r: any) => l.time - r.time);\r\n\r\n    const submitHandle = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (answerText.length < 3) {\r\n            return setErrors(state => ({ answerText: 'ответ не короче 3 символов' }));\r\n        }\r\n\r\n        const answer = {\r\n            \"time\": Date.now(),\r\n            \"text\": answerText,\r\n            \"isAnswer\": true\r\n        };\r\n        chat[chat.length] = answer;\r\n        dataProvider.update('chat', ({ data: { Id: record.Id, chatDoctor: chat } } as any) )\r\n            .then((r) => {})\r\n            .catch((e) => {\r\n                console.log('• chatWhowError', e);\r\n            });\r\n        setAnswerText('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box p={5}>\r\n                <Typography variant=\"h5\">{record.firstName} {record.lastName} {record.userName}</Typography>\r\n                <Typography>чат</Typography>\r\n                <Box p={5}>\r\n                    {chat.length == 0 && <Typography>пока нет вопросов</Typography>}\r\n                    {chat.map((m: ChatMessage) => (\r\n                        <Box key={m.time} marginBottom={1} className={sif({ [classes.message]: true, [classes.messageRight]: m.isAnswer })}>\r\n                            <div>\r\n                                <Box p={1} fontSize={12}>{new Date(m.time).toLocaleString('ru')}</Box>\r\n                                {m.text}\r\n                            </div>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Box marginBottom={1}><Typography>форма ответа</Typography></Box>\r\n                <form onSubmit={submitHandle}>\r\n                    <Box marginBottom={1}>\r\n                        <Typography color=\"error\">{errors.answerText}</Typography>\r\n                        <TextField fullWidth id=\"outlined-basic\" label=\"ответ\" variant=\"outlined\" value={answerText} onChange={(e) => setAnswerText(e.target.value)} />\r\n                    </Box>\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                        отправить\r\n                    </Button>\r\n                </form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ChatShowTitle: React.FC<any> = ({ record }) => (<span>{record.firstName} {record.lastName} {record.userName}</span>)\r\nexport const ChatShow: React.FC<any> = (props) => {\r\n    return (\r\n        <Show {...props} title={<ChatShowTitle />}>\r\n            <ChatShowLayout />\r\n        </Show>\r\n    );\r\n};","C:\\Users\\User\\projects\\reactadminnet\\src\\components\\NotFound\\NotFound.tsx",["127"],"import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Title } from 'react-admin';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default () => (\r\n  <Card>\r\n    <Title title=\"Не нашлось\" />\r\n    <CardContent>\r\n      <h1>Ничего не нашлось</h1>\r\n\r\n      <Typography>\r\n        <Link to=\"/vaccine\">к вакцинам</Link>\r\n      </Typography>\r\n      <Typography>\r\n        <Link to=\"/diseas\">к болезням</Link>\r\n      </Typography>\r\n    </CardContent>\r\n  </Card>\r\n);","C:\\Users\\User\\projects\\reactadminnet\\src\\Layout\\index.ts",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineEdit.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineList.tsx",[],"C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\vaccine\\VaccineCreate.tsx",["128","129","130"],"import React from 'react';\r\nimport {\r\n  ArrayInput,\r\n  ChipField,\r\n  Create,\r\n  ReferenceArrayInput,\r\n  ReferenceInput,\r\n  SelectArrayInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ntype VaccineCreateProps = {\r\n\r\n}\r\n\r\nconst VaccineTitle: React.FC<any> = ({ record }) => (<span>{record.name || \"Вакцина\"}</span>);\r\n\r\nexport const VaccineCreate: React.FC<VaccineCreateProps> = props => (\r\n  <Create {...props} title={<VaccineTitle />}>\r\n    <SimpleForm>\r\n      <TextInput source=\"name\" fullWidth helperText=\"имя вакцины\" label=\"имя\" />\r\n      <TextInput source=\"description\" multiline fullWidth helperText=\"описание вакцины\" label=\"описание\" />\r\n\r\n      <Typography variant=\"h5\">\r\n        <BugReport/> болезни для данной прививки\r\n      </Typography>\r\n      <ArrayInput source=\"diseases\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" fullWidth>\r\n            <SelectInput source=\"name\" helperText=\"болезнь\" resettable />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);","C:\\Users\\User\\projects\\reactadminnet\\src\\entities\\questions\\QuestoinEdit.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":28},{"ruleId":"135","severity":1,"message":"139","line":2,"column":30,"nodeType":"137","messageId":"138","endLine":2,"endColumn":41},{"ruleId":"135","severity":1,"message":"140","line":25,"column":9,"nodeType":"137","messageId":"138","endLine":25,"endColumn":18},{"ruleId":"135","severity":1,"message":"141","line":8,"column":3,"nodeType":"137","messageId":"138","endLine":8,"endColumn":9},{"ruleId":"135","severity":1,"message":"142","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":17},{"ruleId":"135","severity":1,"message":"143","line":26,"column":5,"nodeType":"137","messageId":"138","endLine":26,"endColumn":14},{"ruleId":"135","severity":1,"message":"144","line":28,"column":5,"nodeType":"137","messageId":"138","endLine":28,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"145","severity":1,"message":"147","line":2,"column":24,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"145","severity":1,"message":"148","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":22},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"149","severity":1,"message":"150","line":21,"column":14,"nodeType":"137","messageId":"151","endLine":21,"endColumn":46},{"ruleId":"135","severity":1,"message":"152","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"153","line":2,"column":33,"nodeType":"137","messageId":"138","endLine":2,"endColumn":47},{"ruleId":"135","severity":1,"message":"154","line":48,"column":11,"nodeType":"137","messageId":"138","endLine":48,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":76,"column":34,"nodeType":"157","messageId":"158","endLine":76,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":8,"column":1,"nodeType":"161","endLine":22,"endColumn":3},{"ruleId":"135","severity":1,"message":"162","line":4,"column":3,"nodeType":"137","messageId":"138","endLine":4,"endColumn":12},{"ruleId":"135","severity":1,"message":"163","line":6,"column":3,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"135","severity":1,"message":"164","line":8,"column":3,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'EditGuesser' is defined but never used.","Identifier","unusedVar","'ListGuesser' is defined but never used.","'translate' is assigned a value but never used.","'Button' is defined but never used.","'IconEvent' is defined but never used.","'hasCreate' is assigned a value but never used.","'selectedIds' is assigned a value but never used.","no-unused-vars","'FC' is defined but never used.","'ReactElement' is defined but never used.","'useTranslate' is defined but never used.","@typescript-eslint/no-redeclare","'AnswerEdit' is already defined.","redeclared","'useEffect' is defined but never used.","'useListContext' is defined but never used.","'filteredChat' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ChipField' is defined but never used.","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","no-global-assign","no-unsafe-negation"]